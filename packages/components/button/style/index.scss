@use '../../style/minixs/function.scss' as *;

@mixin isState($color,$hover,$active) {
  border-color: var(#{$color});
  background-color: var(#{$color});
  color: white;
  &:hover,&:focus{
    border-color: var(#{$color + $hover});
    background-color:var(#{$color + $hover});
    color: white;
  }
  &:active{
    border-color: var(#{$color + $active});
    background-color:var(#{$color + $active});
  }
  
  $state_group:(plain,text,round,disabled,loading);
  @each $item in $state_group {
    &.is-#{$item}{
      // @include action($item);
      @if $item == 'plain' {
        color: var(#{$color});
        background: transparent !important;
        &:hover,&:focus{
          color: var(#{$color + $hover});
        }
        &:active{
          color: var(#{$color + $active});
        }
      }
      @else if $item == 'text' {
        
      }
      @else if $item == 'round' {
        border-radius: getCssVar('border','radius-round');
      }
      @else if $item == 'disabled' or $item == 'loading' {
        @if $item == 'disabled' {cursor: not-allowed;}
        @if $item == 'loading' {pointer-events: none;}
        opacity: .5;
        filter: alpha(opacity=50);
        &:hover,&:focus{
          border-color: var(#{$color});
          background-color:var(#{$color});
          color: white;
        }
      }
    }
  }
}

@mixin animation($types){
  @if $types == 'l_slip'{
    >.icon{
      position:absolute;
      margin: 0;
      left: -60%;
      transition: left 0.3s
    }
    >.container{
      transition: color .2s
    }
    &:hover{
      >.icon{
        left: 0;
      }
      >.container{
        color: transparent;
      }
    }
  }
  @if $types == 'r_slip'{
    >.icon{
      position:absolute;
      left: 60%;
      transition: left .3s;
    }
    >.container{
      transition: color .2s
    }
    &:hover{
      >.icon{
        left: 0;
      }
      >.container{
        color: transparent;
      }
    }
  }
  @if $types == 'l_open'{
    >.container{
      overflow: hidden;
    }
    &:hover{
      width: fit-content;
      >.container{
        width: 100%;
        transition-delay: .3s;
      }
      >.icon{
        margin-right: 5px;
      }
    }
  }
  @if $types == 'r_open'{

  }
}


//默认
.nv-button{
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  width: fit-content;
  overflow: hidden;
  white-space: nowrap;
  cursor: pointer;
  text-align: center;
  box-sizing: border-box;
  border-radius: getCssVar('border','radius-base');
  border: 1px solid getCssVar('color','default');
  background: transparent;
  color: getCssVar('color','default');
  padding: 8px 16px;
  >.container{
    position: relative;
    z-index: 2;
    align-items: center;
    font-size: getCssVar('font','size-default');
  }
  >.icon{
    display: inline-flex;
    justify-content:center;
    align-items: center;
    height: 100%;
    width: 100%;
    margin-right: 5px;
  }
  &:hover,&:focus{
    border-color:getCssVar('color','primary-light-9');
    color: getCssVar('color','primary-light-9');
  }
  &.is-circle{
    border-radius: getCssVar('border','radius-circle');
    padding: 8px;
    >.icon{
      margin: 0;
    }
  }
}

//尺寸

$size_group:(large,small,mini,full);
@each $item in $size_group {
  @if $item != 'full'{
    .nv-button--#{$item}{
        padding:getCssVar('padding',$item);
        &.is-circle{
          @if $item == 'large' {
            padding: 12px;
          }@else if $item == 'small'{
            padding: 6px;
          }@else if $item == 'mini'{
            padding: 4px;
          }
          border-radius: getCssVar('border','radius-circle');
          >.icon{
            margin: 0;
          }
        }
    }
  }@else{
    .nv-button--#{$item}{
      width: 100%;
      text-align: center;
    }
  }
}

//状态
$type_group:(primary,success,warning,info,danger);
@each $item in $type_group{
  .nv-button--#{$item}{
    @include isState(getCssVarName('color',$item),'-light-7','-light-9')
    
  }
}

// 动画
$animation_group:(l_slip,r_slip,l_open,r_open);
@each $item in $animation_group {
  .nv-button--#{$item} {
    @include animation($item)
  }
}








